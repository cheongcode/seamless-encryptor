{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,iEAA8B;AAC1C,YAAY,mBAAO,CAAC,uFAAO;AAC3B,UAAU,qDAAuB;;AAEjC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;;AAEA,UAAU,+HAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,qHAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sIAAwC;AAC1C,EAAE;AACF,EAAE,gIAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,+HAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvJA,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,QAAQ,MAAM,EAAE,mBAAO,CAAC,0BAAU;AAClC,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzHA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,QAAQ,sCAAsC,EAAE,mBAAO,CAAC,0BAAU;AAClE,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,eAAe,mBAAO,CAAC,sBAAQ;AAC/B;AACA,mBAAmB,mBAAO,CAAC,wDAAsB;AACjD,mBAAmB,mBAAO,CAAC,wDAAsB;;AAEjD;;AAEA;AACA,IAAI,mBAAO,CAAC,oFAA2B;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oGAAiC;AAChD;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,qBAAqB,mCAAyB;;AAE9C;AACA,MAAM,IAAsC;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,iDAAiD,iCAAiC;AAC3I;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,0CAA0C,cAAc;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO,GAAG,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,gDAAgD,kBAAkB;AAClE;AACA;AACA,iDAAiD,6CAA6C;AAC9F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,OAAO,GAAG,SAAS;;AAEjD;AACA,iDAAiD,uDAAuD;AACxG;;AAEA;AACA,iDAAiD,4CAA4C;AAC7F;;AAEA;AACA,iDAAiD,wCAAwC;AACzF;AACA;AACA,wBAAwB,sCAAsC;AAC9D,SAAS;;AAET;AACA,qBAAqB;AACrB;;AAEA;AACA,iDAAiD,6CAA6C;;AAE9F,iBAAiB;AACjB,MAAM;AACN;AACA,iBAAiB;AACjB;AACA,CAAC;;AAED;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA,iDAAiD,6CAA6C;AAC9F;AACA;AACA,8BAA8B,OAAO,GAAG,SAAS;;AAEjD;AACA,iDAAiD,uDAAuD;AACxG;;AAEA;AACA,iDAAiD,wCAAwC;AACzF;AACA,4BAA4B,SAAS;AACrC,wBAAwB,oDAAoD;AAC5E,SAAS;;AAET;AACA,qBAAqB;AACrB;;AAEA;AACA,iDAAiD,6CAA6C;;AAE9F,iBAAiB;AACjB,MAAM;AACN;AACA,iBAAiB;AACjB;AACA,CAAC;;AAED;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO,GAAG,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO,GAAG,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qDAAqD,cAAc;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU,GAAG,wBAAwB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ,kEAAkE,cAAc;AAChF;AACA;AACA,CAAC;;AAED;AACA","sources":["webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/index.js","webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/node_modules/debug/src/browser.js","webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/node_modules/debug/src/debug.js","webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/node_modules/debug/src/index.js","webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/node_modules/debug/src/node.js","webpack://seamless-encryptor/./node_modules/electron-squirrel-startup/node_modules/ms/index.js","webpack://seamless-encryptor/./src/config/keyManager.js","webpack://seamless-encryptor/./src/crypto/encryption.js","webpack://seamless-encryptor/external node-commonjs \"child_process\"","webpack://seamless-encryptor/external node-commonjs \"crypto\"","webpack://seamless-encryptor/external node-commonjs \"electron\"","webpack://seamless-encryptor/external node-commonjs \"fs\"","webpack://seamless-encryptor/external node-commonjs \"net\"","webpack://seamless-encryptor/external node-commonjs \"path\"","webpack://seamless-encryptor/external node-commonjs \"tty\"","webpack://seamless-encryptor/external node-commonjs \"util\"","webpack://seamless-encryptor/webpack/bootstrap","webpack://seamless-encryptor/./src/main/main.js"],"sourcesContent":["var path = require('path');\nvar spawn = require('child_process').spawn;\nvar debug = require('debug')('electron-squirrel-startup');\nvar app = require('electron').app;\n\nvar run = function(args, done) {\n  var updateExe = path.resolve(path.dirname(process.execPath), '..', 'Update.exe');\n  debug('Spawning `%s` with args `%s`', updateExe, args);\n  spawn(updateExe, args, {\n    detached: true\n  }).on('close', done);\n};\n\nvar check = function() {\n  if (process.platform === 'win32') {\n    var cmd = process.argv[1];\n    debug('processing squirrel command `%s`', cmd);\n    var target = path.basename(process.execPath);\n\n    if (cmd === '--squirrel-install' || cmd === '--squirrel-updated') {\n      run(['--createShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-uninstall') {\n      run(['--removeShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-obsolete') {\n      app.quit();\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = check();\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","const crypto = require('crypto');\nconst { app } = require('electron');\nconst fs = require('fs');\nconst path = require('path');\n\n// Key storage path\nconst KEY_STORAGE_PATH = app ? path.join(app.getPath('userData'), 'keys') : '';\n\n/**\n * Ensure the key storage directory exists\n */\nfunction ensureKeyStorageExists() {\n  if (!KEY_STORAGE_PATH) return;\n  \n  if (!fs.existsSync(KEY_STORAGE_PATH)) {\n    fs.mkdirSync(KEY_STORAGE_PATH, { recursive: true });\n  }\n}\n\n/**\n * Generate a master key\n * @returns {Buffer} 32-byte random key\n */\nfunction generateMasterKey() {\n  return crypto.randomBytes(32);\n}\n\n// In-memory master key\nlet masterKey = null;\n\n/**\n * Get the master key, creating it if it doesn't exist\n * @returns {Promise<Buffer>} The master key\n */\nasync function getMasterKey() {\n  if (masterKey) return masterKey;\n  \n  try {\n    ensureKeyStorageExists();\n    const keyPath = path.join(KEY_STORAGE_PATH, 'master.key');\n    \n    if (fs.existsSync(keyPath)) {\n      masterKey = await fs.promises.readFile(keyPath);\n    } else {\n      masterKey = generateMasterKey();\n      await fs.promises.writeFile(keyPath, masterKey);\n    }\n    \n    return masterKey;\n  } catch (error) {\n    console.error('Error getting master key:', error);\n    throw error;\n  }\n}\n\n/**\n * Store an encrypted file key\n * @param {string} fileId - Unique file identifier\n * @param {Object} encryptedKey - Encrypted key data\n */\nfunction storeFileKey(fileId, encryptedKey) {\n  try {\n    ensureKeyStorageExists();\n    const keyPath = path.join(KEY_STORAGE_PATH, `${fileId}.key`);\n    fs.writeFileSync(keyPath, JSON.stringify(encryptedKey));\n  } catch (error) {\n    console.error('Error storing file key:', error);\n    throw error;\n  }\n}\n\n/**\n * Get an encrypted file key\n * @param {string} fileId - Unique file identifier\n * @returns {Object|null} Encrypted key data or null if not found\n */\nfunction getFileKey(fileId) {\n  try {\n    ensureKeyStorageExists();\n    const keyPath = path.join(KEY_STORAGE_PATH, `${fileId}.key`);\n    \n    if (fs.existsSync(keyPath)) {\n      const data = fs.readFileSync(keyPath, 'utf8');\n      return JSON.parse(data);\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Error getting file key:', error);\n    return null;\n  }\n}\n\n/**\n * Remove a file key\n * @param {string} fileId - Unique file identifier\n * @returns {boolean} True if successful, false otherwise\n */\nfunction removeFileKey(fileId) {\n  try {\n    ensureKeyStorageExists();\n    const keyPath = path.join(KEY_STORAGE_PATH, `${fileId}.key`);\n    \n    if (fs.existsSync(keyPath)) {\n      fs.unlinkSync(keyPath);\n      return true;\n    }\n    \n    return false;\n  } catch (error) {\n    console.error('Error removing file key:', error);\n    return false;\n  }\n}\n\nmodule.exports = {\n  generateMasterKey,\n  getMasterKey,\n  storeFileKey,\n  getFileKey,\n  removeFileKey\n}; ","const crypto = require('crypto');\n\n/**\n * Generate a random encryption key\n * @returns {Buffer} 32-byte encryption key\n */\nfunction generateKey() {\n    return crypto.randomBytes(32);\n}\n\n/**\n * Encrypt data using AES-256-GCM\n * @param {Buffer} data - Data to encrypt\n * @param {Buffer} key - 32-byte encryption key\n * @returns {Object} Object containing encryptedData, iv, and authTag\n */\nfunction encrypt(data, key) {\n    const iv = crypto.randomBytes(16);\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, iv);\n    \n    const encrypted = Buffer.concat([\n        cipher.update(data),\n        cipher.final()\n    ]);\n    \n    const authTag = cipher.getAuthTag();\n    \n    return {\n        encryptedData: encrypted,\n        iv,\n        tag: authTag\n    };\n}\n\n/**\n * Decrypt data using AES-256-GCM\n * @param {Object} encryptedObj - Object containing encryptedData, iv, and tag\n * @param {Buffer} key - 32-byte encryption key\n * @returns {Buffer} Decrypted data\n */\nfunction decrypt(encryptedObj, key) {\n    const { encryptedData, iv, tag } = encryptedObj;\n    const decipher = crypto.createDecipheriv('aes-256-gcm', key, iv);\n    decipher.setAuthTag(tag);\n    \n    return Buffer.concat([\n        decipher.update(encryptedData),\n        decipher.final()\n    ]);\n}\n\n/**\n * Encrypt a file key with the master key\n * @param {Buffer} fileKey - File encryption key\n * @param {Buffer} masterKey - Master encryption key\n * @returns {Object} Encrypted key data\n */\nfunction encryptKey(fileKey, masterKey) {\n    return encrypt(fileKey, masterKey);\n}\n\n/**\n * Decrypt a file key with the master key\n * @param {Object} encryptedKey - Encrypted key data\n * @param {Buffer} masterKey - Master encryption key\n * @returns {Buffer} Decrypted file key\n */\nfunction decryptKey(encryptedKey, masterKey) {\n    return decrypt(encryptedKey, masterKey);\n}\n\nmodule.exports = {\n    generateKey,\n    encrypt,\n    decrypt,\n    encryptKey,\n    decryptKey,\n    randomBytes: crypto.randomBytes,\n    createCipheriv: crypto.createCipheriv,\n    createDecipheriv: crypto.createDecipheriv\n}; ","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { app, BrowserWindow, ipcMain, dialog } = require('electron');\nconst path = require('path');\nconst fs = require('fs');\nconst crypto = require('crypto');\n// Use our utility modules\nconst cryptoUtil = require('../crypto/encryption');\nconst keyManager = require('../config/keyManager');\n\nlet mainWindow;\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (require('electron-squirrel-startup')) {\n  app.quit();\n}\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 1024,\n    height: 768,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,\n      sandbox: true,\n      webSecurity: true\n    },\n  });\n\n  // Load the index.html from webpack\n  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\n\n  // Open the DevTools in development\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.webContents.openDevTools();\n  }\n\n  // Set proper CSP headers\n  mainWindow.webContents.session.webRequest.onHeadersReceived((details, callback) => {\n    callback({\n      responseHeaders: {\n        ...details.responseHeaders,\n        'Content-Security-Policy': [\"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';\"]\n      }\n    });\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(() => {\n  createWindow();\n\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n});\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on('window-all-closed', () => {\n  // Clean up temp files\n  try {\n    const tempDir = path.join(app.getPath('temp'), 'seamless-encryptor');\n    if (fs.existsSync(tempDir)) {\n      // Read directory and delete all files\n      const files = fs.readdirSync(tempDir);\n      for (const file of files) {\n        const filePath = path.join(tempDir, file);\n        fs.unlinkSync(filePath);\n      }\n      // Try to delete the directory\n      fs.rmdirSync(tempDir);\n    }\n  } catch (error) {\n    console.error('Error cleaning up temp directory:', error);\n  }\n\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n// Mock storage service for now\nconst storageService = {\n  uploadFile: async (key, data) => {\n    // In a real app, this would upload to a cloud service\n    const storageDir = path.join(app.getPath('userData'), 'encrypted');\n    \n    // Create the base directory if it doesn't exist\n    if (!fs.existsSync(storageDir)) {\n      fs.mkdirSync(storageDir, { recursive: true });\n    }\n    \n    // Extract directory part from the key (e.g., \"fileId\" from \"fileId/filename.enc\")\n    const keyParts = key.split('/');\n    if (keyParts.length > 1) {\n      const dirPart = path.join(storageDir, keyParts[0]);\n      if (!fs.existsSync(dirPart)) {\n        fs.mkdirSync(dirPart, { recursive: true });\n      }\n    }\n    \n    const filePath = path.join(storageDir, key);\n    await fs.promises.writeFile(filePath, data);\n    return { key };\n  },\n  \n  downloadFile: async (key) => {\n    const storageDir = path.join(app.getPath('userData'), 'encrypted');\n    const filePath = path.join(storageDir, key);\n    \n    if (fs.existsSync(filePath)) {\n      return await fs.promises.readFile(filePath);\n    }\n    throw new Error('File not found');\n  },\n  \n  deleteFile: async (key) => {\n    const storageDir = path.join(app.getPath('userData'), 'encrypted');\n    const filePath = path.join(storageDir, key);\n    \n    if (fs.existsSync(filePath)) {\n      await fs.promises.unlink(filePath);\n      return true;\n    }\n    return false;\n  }\n};\n\n// Helper function to decrypt data\nasync function decryptData(encryptedData, encryptionKey) {\n  try {\n    const key = Buffer.from(encryptionKey, 'hex');\n    const iv = encryptedData.slice(0, 16);\n    const authTag = encryptedData.slice(16, 32);\n    const encrypted = encryptedData.slice(32);\n    \n    const decipher = crypto.createDecipheriv('aes-256-gcm', key, iv);\n    decipher.setAuthTag(authTag);\n    \n    return Buffer.concat([\n      decipher.update(encrypted),\n      decipher.final()\n    ]);\n  } catch (error) {\n    console.error('Decryption failed:', error);\n    throw new Error(`Decryption failed: ${error.message}`);\n  }\n}\n\n// IPC Handlers\nipcMain.handle('select-file', async () => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    properties: ['openFile']\n  });\n  return result.filePaths[0];\n});\n\nipcMain.handle('encrypt-and-upload', async (event, filePath) => {\n  try {\n    // Read file\n    const fileData = await fs.promises.readFile(filePath);\n    const fileName = path.basename(filePath);\n    \n    // Generate file key and encrypt\n    const fileKey = crypto.randomBytes(32);\n    const encryptedData = crypto.encrypt(fileData, fileKey);\n    \n    // Encrypt file key with master key\n    const masterKey = await keyManager.getMasterKey();\n    const encryptedKey = crypto.encryptKey(fileKey, masterKey);\n    \n    // Store encrypted key\n    const fileId = crypto.randomBytes(16).toString('hex');\n    keyManager.storeFileKey(fileId, encryptedKey);\n    \n    // Save encrypted data locally\n    const storageKey = `${fileId}/${fileName}.enc`;\n    await storageService.uploadFile(storageKey, encryptedData.encryptedData);\n    \n    return {\n      success: true,\n      fileId,\n      fileName\n    };\n  } catch (error) {\n    console.error('Encrypt and upload error:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n});\n\nipcMain.handle('download-file', async (event, { fileId, fileName }) => {\n    try {\n        // Send progress updates\n        event.sender.send('download-progress', { progress: 0, status: 'Starting download...' });\n        \n        // Get encryption key\n        const encryptionKey = getEncryptionKey();\n        if (!encryptionKey) {\n            throw new Error('Encryption key not found');\n        }\n\n        // Construct storage key\n        const storageKey = `${fileId}/${fileName}.enc`;\n\n        // Download encrypted data\n        event.sender.send('download-progress', { progress: 25, status: 'Downloading encrypted file...' });\n        const encryptedData = await storageService.downloadFile(storageKey);\n\n        // Decrypt the data\n        event.sender.send('download-progress', { progress: 50, status: 'Decrypting file...' });\n        const decryptedData = await decryptData(encryptedData, encryptionKey.toString('hex'));\n\n        // Save the decrypted file\n        event.sender.send('download-progress', { progress: 75, status: 'Saving file...' });\n        const savePath = await dialog.showSaveDialog({\n            defaultPath: fileName,\n            filters: [{ name: 'All Files', extensions: ['*'] }]\n        });\n\n        if (savePath.canceled) {\n            return { success: false, error: 'Download cancelled' };\n        }\n\n        await fs.promises.writeFile(savePath.filePath, decryptedData);\n        event.sender.send('download-progress', { progress: 100, status: 'Download complete!' });\n\n        return { success: true };\n    } catch (err) {\n        console.error('Download error:', err);\n        return { success: false, error: err.message };\n    }\n});\n\n// Add new IPC handler for downloading encrypted files\nipcMain.handle('download-encrypted-file', async (event, { fileId, fileName }) => {\n    try {\n        // Send progress updates\n        event.sender.send('download-progress', { progress: 0, status: 'Starting download...' });\n        \n        // Construct storage key\n        const storageKey = `${fileId}/${fileName}.enc`;\n\n        // Download encrypted data\n        event.sender.send('download-progress', { progress: 50, status: 'Downloading encrypted file...' });\n        const encryptedData = await storageService.downloadFile(storageKey);\n\n        // Save the encrypted file\n        event.sender.send('download-progress', { progress: 75, status: 'Saving file...' });\n        const savePath = await dialog.showSaveDialog({\n            defaultPath: `${fileName}.encrypted`,\n            filters: [{ name: 'Encrypted Files', extensions: ['encrypted'] }]\n        });\n\n        if (savePath.canceled) {\n            return { success: false, error: 'Download cancelled' };\n        }\n\n        await fs.promises.writeFile(savePath.filePath, encryptedData);\n        event.sender.send('download-progress', { progress: 100, status: 'Download complete!' });\n\n        return { success: true };\n    } catch (err) {\n        console.error('Download error:', err);\n        return { success: false, error: err.message };\n    }\n});\n\nipcMain.handle('delete-file', async (event, fileId) => {\n  try {\n    // Get the file info from the renderer\n    const storageKey = `${fileId}/*`;\n    \n    // Find all files matching the pattern\n    const storageDir = path.join(app.getPath('userData'), 'encrypted', fileId);\n    if (fs.existsSync(storageDir)) {\n      const files = fs.readdirSync(storageDir);\n      for (const file of files) {\n        await storageService.deleteFile(`${fileId}/${file}`);\n      }\n      \n      // Remove the directory\n      fs.rmdirSync(storageDir);\n    }\n    \n    return {\n      success: true\n    };\n  } catch (error) {\n    event.sender.send('error', `Delete failed: ${error.message}`);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n});\n\nipcMain.handle('encrypt-file', async (event, filePath) => {\n  try {\n    // Notify start\n    event.sender.send('progress', 0);\n    \n    // Implementation for file encryption\n    const key = getEncryptionKey();\n    const inputBuffer = await fs.promises.readFile(filePath);\n    \n    // Update progress\n    event.sender.send('progress', 20);\n    \n    const iv = crypto.randomBytes(16);\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, iv);\n    \n    const encrypted = Buffer.concat([\n      cipher.update(inputBuffer),\n      cipher.final()\n    ]);\n    \n    // Update progress\n    event.sender.send('progress', 50);\n    \n    const authTag = cipher.getAuthTag();\n    const encryptedData = Buffer.concat([iv, authTag, encrypted]);\n    \n    // Upload to storage\n    const fileId = crypto.randomBytes(16).toString('hex');\n    const fileName = path.basename(filePath);\n    const storageKey = `${fileId}/${fileName}.enc`;\n    \n    // Update progress\n    event.sender.send('progress', 70);\n    \n    await storageService.uploadFile(storageKey, encryptedData);\n    \n    // Complete\n    event.sender.send('progress', 100);\n    event.sender.send('success', 'File encrypted and uploaded successfully!');\n    \n    return {\n      success: true,\n      fileId,\n      fileName\n    };\n  } catch (error) {\n    event.sender.send('error', `Encryption failed: ${error.message}`);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n});\n\nipcMain.handle('decrypt-file', async (event, encryptedData) => {\n  try {\n    const key = getEncryptionKey();\n    const iv = encryptedData.slice(0, 16);\n    const authTag = encryptedData.slice(16, 32);\n    const encrypted = encryptedData.slice(32);\n    \n    const decipher = crypto.createDecipheriv('aes-256-gcm', key, iv);\n    decipher.setAuthTag(authTag);\n    \n    const decrypted = Buffer.concat([\n      decipher.update(encrypted),\n      decipher.final()\n    ]);\n    \n    return decrypted;\n  } catch (error) {\n    event.sender.send('error', `Decryption failed: ${error.message}`);\n    throw error;\n  }\n});\n\nipcMain.handle('generate-key', () => {\n  const key = crypto.randomBytes(32);\n  return key.toString('hex');\n});\n\nlet encryptionKey = null;\n\nipcMain.handle('set-key', (event, key) => {\n  encryptionKey = Buffer.from(key, 'hex');\n});\n\nipcMain.handle('get-key', () => {\n  return encryptionKey ? encryptionKey.toString('hex') : null;\n});\n\nfunction getEncryptionKey() {\n  if (!encryptionKey) {\n    throw new Error('Encryption key not set');\n  }\n  return encryptionKey;\n}\n\nipcMain.handle('open-file-dialog', async () => {\n  const result = await dialog.showOpenDialog({\n    properties: ['openFile'],\n    filters: [\n      { name: 'All Files', extensions: ['*'] }\n    ]\n  });\n  \n  if (!result.canceled && result.filePaths.length > 0) {\n    return result.filePaths[0];\n  }\n  return null;\n});\n\nipcMain.handle('save-file-dialog', async () => {\n  const result = await dialog.showSaveDialog({\n    filters: [\n      { name: 'All Files', extensions: ['*'] }\n    ]\n  });\n  \n  if (!result.canceled) {\n    return result.filePath;\n  }\n  return null;\n});\n\n// Handle drag and drop files\nipcMain.handle('save-dropped-file', async (event, fileInfo) => {\n  try {\n    // We need to save the file because renderer process can't directly access file paths\n    const tempDir = path.join(app.getPath('temp'), 'seamless-encryptor');\n    \n    // Create temp dir if it doesn't exist\n    if (!fs.existsSync(tempDir)) {\n      fs.mkdirSync(tempDir, { recursive: true });\n    }\n    \n    // Generate a unique file path with timestamp to avoid conflicts\n    const timestamp = Date.now();\n    const fileName = fileInfo.name || 'file';\n    const tempFilePath = path.join(tempDir, `${timestamp}-${path.basename(fileName)}`);\n    \n    // Convert the array back to a buffer and write to file\n    const buffer = Buffer.from(new Uint8Array(fileInfo.data));\n    await fs.promises.writeFile(tempFilePath, buffer);\n    \n    // Schedule cleanup of the temp file (after 1 minute)\n    setTimeout(() => {\n      try {\n        if (fs.existsSync(tempFilePath)) {\n          fs.unlinkSync(tempFilePath);\n        }\n      } catch (cleanupError) {\n        console.error('Failed to clean up temp file:', cleanupError);\n      }\n    }, 60000);\n    \n    return tempFilePath;\n  } catch (error) {\n    event.sender.send('error', `Failed to process dropped file: ${error.message}`);\n    throw error;\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and import them here.\n"],"names":[],"sourceRoot":""}